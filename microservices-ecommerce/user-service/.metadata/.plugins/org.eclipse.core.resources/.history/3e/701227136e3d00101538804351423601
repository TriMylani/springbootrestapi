package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;
import com.example.demo.model.User;
import java.util.*;

@RestController
@RequestMapping("/users")
public class UserController {

    @Autowired
    private RestTemplate restTemplate;

    // Dummy data seolah-olah dari database
    private List<User> users = Arrays.asList(
        new User(1L, "John Doe", "john@email.com", "081234567890"),
        new User(2L, "Jane Smith", "jane@email.com", "081234567891"),
        new User(3L, "Bob Johnson", "bob@email.com", "081234567892")
    );

    // GET semua user
    @GetMapping
    public List<User> getAllUsers() {
        return users;
    }

    // GET user by ID
    @GetMapping("/{id}")
    public User getUserById(@PathVariable Long id) {
        return users.stream()
                .filter(user -> user.getId().equals(id))
                .findFirst()
                .orElse(null);
    }

    // GET /users/info
    @GetMapping("/info")
    public String getServiceInfo() {
        return "User Service is running on port 8036";
    }

    // Method baru: User bisa lihat semua produk
    @GetMapping("/products")
    public String getUserProducts() {
        try {
            // Panggil Product Service via Gateway
            String products = restTemplate.getForObject(
                "http://localhost:8083/products", 
                String.class
            );
            return "Products available for users: " + products;
        } catch (Exception e) {
            return "Error connecting to Product Service: " + e.getMessage();
        }
    }

 // Method baru: User dashboard dengan info produk
    @GetMapping("/{id}/dashboard")
    public Map<String, Object> getUserDashboard(@PathVariable Long id) {
        Map<String, Object> dashboard = new HashMap<>();
        
        // Ambil data user
        User user = getUserById(id);
        dashboard.put("user", user);
        
        // Ambil info produk service
        try {
            String productInfo = restTemplate.getForObject(
                "http://localhost:8083/products/info", 
                String.class
            );
            dashboard.put("productServiceStatus", productInfo);
        } catch (Exception e) {
            dashboard.put("productServiceStatus", "Product Service unavailable");
        }
        
        return dashboard;
    }
}